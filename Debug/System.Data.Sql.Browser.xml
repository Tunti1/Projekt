<?xml version="1.0"?>
<doc>
    <assembly>
        <name>System.Data.Sql.Browser</name>
    </assembly>
    <members>
        <member name="T:System.Data.Sql.BanyanVinesInfo">
            <summary>
            Banyan VINES information for a SQL Server Instance
            </summary>
        </member>
        <member name="P:System.Data.Sql.BanyanVinesInfo.Item">
            <summary>
            The Banyan VINES item name
            </summary>
        </member>
        <member name="P:System.Data.Sql.BanyanVinesInfo.Group">
            <summary>
            The Banyan VINES group name
            </summary>
        </member>
        <member name="P:System.Data.Sql.BanyanVinesInfo.Parameters">
            <summary>
            The Banyan VINES parameters
            </summary>
        </member>
        <member name="T:System.Data.Sql.BanyanVinesParameters">
            <summary>
            Banyan VINES parameter information for a SQL Server instance
            </summary>
        </member>
        <member name="P:System.Data.Sql.BanyanVinesParameters.Item">
            <summary>
            The Banyan VINES item name
            </summary>
        </member>
        <member name="P:System.Data.Sql.BanyanVinesParameters.Group">
            <summary>
            The Banyan VINES group name
            </summary>
        </member>
        <member name="P:System.Data.Sql.BanyanVinesParameters.Organization">
            <summary>
            The Banyan VINES organization name
            </summary>
        </member>
        <member name="M:System.Data.Sql.Messages.ClientBroadcastEx">
            <summary>
            The CLNT_BCAST_EX packet is a broadcast or multicast request that is generated by clients that are trying to identify the list of database instances on the network and their network protocol connection information.
            </summary>
            <seealso href="http://msdn.microsoft.com/en-us/library/cc219743.aspx">2.2.1 CLNT_BCAST_EX</seealso>
            <returns>Array of bytes containing the CLNT_BCAST_EX message</returns>
            <remarks>Always returns fresh array to prevent consumer from modifying array if we were to optimise as a single array instance.</remarks>
        </member>
        <member name="M:System.Data.Sql.Messages.ClientUnicastEx">
            <summary>
            The CLNT_UCAST_EX packet is a unicast request that is generated by clients that are trying to identify the list of database instances and their network protocol connection information installed on a single machine. The client generates a UDP packet with a single byte.
            </summary>
            <seealso href="http://msdn.microsoft.com/en-us/library/cc219745.aspx">2.2.2 CLNT_UCAST_EX</seealso>
            <returns>Array of bytes containing the CLNT_UCAST_EX message</returns>
            <remarks>Always returns fresh array to prevent consumer from modifying array if we were to optimise as a single array instance.</remarks>
        </member>
        <member name="M:System.Data.Sql.Messages.ClientUnicastInstance(System.String)">
            <summary>
            The CLNT_UCAST_INST packet is a request for information related to a specific instance.
            </summary>
            <param name="instanceName">Name of the instance to request information about.</param>
            <returns>Array of bytes containing the CLNT_UCAST_INST message</returns>
        </member>
        <member name="M:System.Data.Sql.Messages.ClientUnicastDac(System.String)">
            <summary>
            The CLNT_UCAST_DAC packet request is used to determine the TCP port on which the SQL Server dedicated administrator connection (DAC) endpoint is listening.
            </summary>
            <param name="instanceName">Name of the instance to request information about.</param>
            <returns>Array of bytes containing the CLNT_UCAST_DAC message</returns>
        </member>
        <member name="M:System.Data.Sql.Messages.ServerResponse(System.Byte[])">
            <summary>
            The server responds to all client requests with an SVR_RESP.
            </summary>
            <param name="response">The bytes that were received in response.</param>
            <returns>The string returned from the server.</returns>
        </member>
        <member name="M:System.Data.Sql.Messages.ServerResponseDac(System.Byte[])">
            <summary>
            The format of the SVR_RESP is different for a CLNT_UCAST_DAC request only.
            </summary>
            <param name="response">The bytes that were received in response.</param>
            <returns>The value of the TCP port number that is used for DAC.</returns>
        </member>
        <member name="T:System.Data.Sql.SqlInstance">
            <summary>
            Provides information about a specific SQL Server instance
            </summary>
        </member>
        <member name="P:System.Data.Sql.SqlInstance.ServerName">
            <summary>
            The name of the server.
            </summary>
        </member>
        <member name="P:System.Data.Sql.SqlInstance.InstanceName">
            <summary>
            The name of the server instance.
            </summary>
        </member>
        <member name="P:System.Data.Sql.SqlInstance.IsClustered">
            <summary>
            Whether or not the server is part of a cluster.
            </summary>
        </member>
        <member name="P:System.Data.Sql.SqlInstance.Version">
            <summary>
            The version of the server instance.
            </summary>
        </member>
        <member name="P:System.Data.Sql.SqlInstance.NamedPipe">
            <summary>
            The pipe name that the server can be reached on, if any.
            </summary>
        </member>
        <member name="P:System.Data.Sql.SqlInstance.TcpPort">
            <summary>
            The TCP port that the server can be reached on, if any.
            </summary>
        </member>
        <member name="P:System.Data.Sql.SqlInstance.RpcName">
            <summary>
            The name of the computer to connect to for RPC-based connections.
            </summary>
        </member>
        <member name="P:System.Data.Sql.SqlInstance.SpxName">
            <summary>
            The SPX service name of the server.
            </summary>
        </member>
        <member name="P:System.Data.Sql.SqlInstance.AdspName">
            <summary>
            The AppleTalk service object name.
            </summary>
        </member>
        <member name="P:System.Data.Sql.SqlInstance.BVInfo">
            <summary>
            The Banyan VINES information for the server instance
            </summary>
        </member>
        <member name="P:System.Data.Sql.SqlInstance.ViaInfo">
            <summary>
            The Virtual Interface Architecture configuration for the server instance
            </summary>
        </member>
        <member name="P:System.Data.Sql.SqlInstance.SqlServerVersion">
            <summary>
            The human readable version of the instance.
            </summary>
        </member>
        <member name="T:System.Data.Sql.Browser">
            <summary>
            Provides methods that query SQL Browser on remote hosts to obtain instance or DAC information
            </summary>
        </member>
        <member name="P:System.Data.Sql.Browser.DefaultTimeout">
            <summary>
            The default timeout period for any requests made via this class
            </summary>
        </member>
        <member name="M:System.Data.Sql.Browser.GetInstances(System.Int32)">
            <summary>
            Searches for all available instances in the subnet.
            </summary>
            <remarks>
            The returned enumerable uses delayed execution, that is that the query is only sent when enumeration begins (and is sent everytime enumeration occurs!)
            Additionally, instance information will be yielded as it is available from other hosts piecemeal, the enumerable will not wait on all hosts to return information and timeout.
            </remarks>
            <param name="timeout">The number of milliseconds to wait for more hosts to respond</param>
            <returns>A delayed execution enumerable that yields SQL Server instance information from the local network.</returns>
        </member>
        <member name="M:System.Data.Sql.Browser.GetInstances">
            <summary>
            Searches for all available instances in the subnet.
            </summary>
            <remarks>
            The returned enumerable uses delayed execution, that is that the query is only sent when enumeration begins (and is sent everytime enumeration occurs!)
            Additionally, instance information will be yielded as it is available from other hosts piecemeal, the enumerable will not wait on all hosts to return information and timeout.
            </remarks>
            <returns>A delayed execution enumerable that yields SQL Server instance information from the local network.</returns>
        </member>
        <member name="M:System.Data.Sql.Browser.GetInstancesOn(System.Int32,System.Collections.Generic.IEnumerable{System.Net.IPAddress})">
            <summary>
            Searches for all available instances at the specified IP Addresses.
            </summary>
            <remarks>
            The returned enumerable uses delayed execution, that is that the query is only sent when enumeration begins (and is sent everytime enumeration occurs!)
            Additionally, instance information will be yielded as it is available from other hosts piecemeal, the enumerable will not wait on all hosts to return information and timeout.
            </remarks>
            <param name="addresses">The remote hosts to query for instances.</param>
            <param name="timeout">The number of milliseconds to wait for more hosts to respond</param>
            <returns>A delayed execution enumerable that yields SQL Server instance information from the local network.</returns>
        </member>
        <member name="M:System.Data.Sql.Browser.GetInstancesOn(System.Int32,System.Net.IPAddress[])">
            <summary>
            Searches for all available instances at the specified IP Addresses.
            </summary>
            <remarks>
            The returned enumerable uses delayed execution, that is that the query is only sent when enumeration begins (and is sent everytime enumeration occurs!)
            Additionally, instance information will be yielded as it is available from other hosts piecemeal, the enumerable will not wait on all hosts to return information and timeout.
            </remarks>
            <param name="addresses">The remote hosts to query for instances.</param>
            <param name="timeout">The number of milliseconds to wait for more hosts to respond</param>
            <returns>A delayed execution enumerable that yields SQL Server instance information from the local network.</returns>
        </member>
        <member name="M:System.Data.Sql.Browser.GetInstancesOn(System.Collections.Generic.IEnumerable{System.Net.IPAddress})">
            <summary>
            Searches for all available instances at the specified IP Addresses.
            </summary>
            <remarks>
            The returned enumerable uses delayed execution, that is that the query is only sent when enumeration begins (and is sent everytime enumeration occurs!)
            Additionally, instance information will be yielded as it is available from other hosts piecemeal, the enumerable will not wait on all hosts to return information and timeout.
            </remarks>
            <param name="addresses">The remote hosts to query for instances.</param>
            <returns>A delayed execution enumerable that yields SQL Server instance information from the local network.</returns>
        </member>
        <member name="M:System.Data.Sql.Browser.GetInstancesOn(System.Net.IPAddress[])">
            <summary>
            Searches for all available instances at the specified IP Addresses.
            </summary>
            <remarks>
            The returned enumerable uses delayed execution, that is that the query is only sent when enumeration begins (and is sent everytime enumeration occurs!)
            Additionally, instance information will be yielded as it is available from other hosts piecemeal, the enumerable will not wait on all hosts to return information and timeout.
            </remarks>
            <param name="addresses">The remote hosts to query for instances.</param>
            <returns>A delayed execution enumerable that yields SQL Server instance information from the local network.</returns>
        </member>
        <member name="M:System.Data.Sql.Browser.GetInstance(System.Net.IPAddress,System.String,System.Int32)">
            <summary>
            Get information about a specific instance
            </summary>
            <param name="address">The host on which the instance is running</param>
            <param name="instanceName">The name of the instance</param>
            <param name="timeout">The number of milliseconds to wait for the host to respond</param>
            <returns>The SQL Server instance information</returns>
            <exception cref="T:System.InvalidOperationException">Thrown if instance does not exist on target server</exception>
        </member>
        <member name="M:System.Data.Sql.Browser.GetInstance(System.Net.IPAddress,System.String)">
            <summary>
            Get information about a specific instance
            </summary>
            <param name="address">The host on which the instance is running</param>
            <param name="instanceName">The name of the instance</param>
            <returns>The SQL Server instance information</returns>
            <exception cref="T:System.InvalidOperationException">Thrown if instance does not exist on target server</exception>
        </member>
        <member name="M:System.Data.Sql.Browser.GetDacPort(System.Net.IPAddress,System.String,System.Int32)">
            <summary>
            Obtains the Dedicated Administrator Connection port number for an instance
            </summary>
            <param name="address">The host on which the instance is running</param>
            <param name="instanceName">The name of the instance</param>
            <param name="timeout">The number of milliseconds to wait for the host to respond</param>
            <returns>The port number of the DAC</returns>
            <exception cref="T:System.InvalidOperationException">Thrown if instance does not exist on target server, or the DAC for that instance is not available</exception>
        </member>
        <member name="M:System.Data.Sql.Browser.GetDacPort(System.Net.IPAddress,System.String)">
            <summary>
            Obtains the Dedicated Administrator Connection port number for an instance
            </summary>
            <param name="address">The host on which the instance is running</param>
            <param name="instanceName">The name of the instance</param>
            <returns>The port number of the DAC</returns>
            <exception cref="T:System.InvalidOperationException">Thrown if instance does not exist on target server, or the DAC for that instance is not available</exception>
        </member>
        <member name="T:System.Data.Sql.ViaInfo">
            <summary>
            Virtual Interface Architecture information for a SQL Server instance
            </summary>
        </member>
        <member name="P:System.Data.Sql.ViaInfo.NetBios">
            <summary>
            The NetBIOS name of a machine where the server resides
            </summary>
        </member>
        <member name="P:System.Data.Sql.ViaInfo.Nic">
            <summary>
            The VIA network interface card (NIC) identifier
            </summary>
        </member>
        <member name="P:System.Data.Sql.ViaInfo.Port">
            <summary>
            The VIA NIC's port
            </summary>
        </member>
    </members>
</doc>
